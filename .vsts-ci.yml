# Build environment:
# https://docs.microsoft.com/en-us/vsts/build-release/concepts/definitions/build/variables?tabs=batch
# Build tasks:
# https://github.com/Microsoft/vsts-tasks

steps:
- bash: docker -v
  displayName: Check docker version

- bash: mkdir -pv ./gopath/src/github.com/mweagle/helloworld
  displayName: Initialize source directory

- bash: |
    for EACHFILE in $(ls .);
    do if [ $EACHFILE != "gopath" ];
      then mv -v $EACHFILE ./gopath/src/github.com/mweagle/helloworld/$EACHFILE;
    fi;
    done
  displayName: Move source

- bash: curl -L -O https://dl.google.com/go/go1.9.2.linux-amd64.tar.gz
  displayName: Download Go

- bash: tar -xzf go1.9.2.linux-amd64.tar.gz -C $BUILD_SOURCESDIRECTORY
  displayName: Expand Go

- bash: $BUILD_SOURCESDIRECTORY/go/bin/go test -v .
  workingDirectory: $(Build.SourcesDirectory)/gopath/src/github.com/mweagle/helloworld
  env:
    GOPATH: $(Build.SourcesDirectory)/gopath
    GOROOT: $(Build.SourcesDirectory)/go
  displayName: Unit Test

- bash: $BUILD_SOURCESDIRECTORY/go/bin/go get -u github.com/jstemmer/go-junit-report
  workingDirectory: $(Build.SourcesDirectory)/gopath/src/github.com/mweagle/helloworld
  env:
    GOPATH: $(Build.SourcesDirectory)/gopath
    GOROOT: $(Build.SourcesDirectory)/go
  displayName: Get JUnit Reporter

- bash: $BUILD_SOURCESDIRECTORY/go/bin/go test -v 2>&1 |$BUILD_SOURCESDIRECTORY/go/bin/go-junit-report > junit.xml
  workingDirectory: $(Build.SourcesDirectory)/gopath/src/github.com/mweagle/helloworld
  env:
    GOPATH: $(Build.SourcesDirectory)/gopath
    GOROOT: $(Build.SourcesDirectory)/go
  displayName: Get JUnit Reporter

- task: PublishTestResults@1
  displayName: Publish Test Results
  inputs:
    testRunner: JUnit
    testResultsFiles: $(Build.SourcesDirectory)/gopath/src/github.com/mweagle/helloworld/junit.xml

- bash: $BUILD_SOURCESDIRECTORY/go/bin/go build -v .
  workingDirectory: $(Build.SourcesDirectory)/gopath/src/github.com/mweagle/helloworld
  env:
    GOPATH: $(Build.SourcesDirectory)/gopath
    GOROOT: $(Build.SourcesDirectory)/go
  displayName: Build

- bash: docker build .
  workingDirectory: $(Build.SourcesDirectory)/gopath/src/github.com/mweagle/helloworld
  displayName: Package

- task: publishBuildArtifacts@1
  displayName: Publish Artifacts
  inputs:
    PathtoPublish: $(Build.SourcesDirectory)/gopath/src/github.com/mweagle/helloworld
    ArtifactName: helloworld
    ArtifactType: Container
